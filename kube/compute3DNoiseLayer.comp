#version 430

#include "simplex3D.glsl"

layout(set = 0, binding=0) buffer Sizes {
    int width;
    int height;
    int depth;
} sizes;

layout(set = 0, binding=1) buffer Instructions {
    float turbulence;
    float density;
    float dissipation_rate;
} instructions;

layout (set = 0, binding = 2) buffer Output {
    float outy[];
};

//needs to be 1,1,1, unless you know your input is divideable
layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main() {
     ivec3 storePos = ivec3(gl_GlobalInvocationID.xyz);
     uint height_pos = gl_GlobalInvocationID.z;

     uint center_pos = sizes.depth/2;

     int access_pos = (storePos.x*sizes.depth*sizes.height)+(storePos.y*sizes.depth)+storePos.z;

     /*if(snoise3(storePos*turbulence) + density > 0 +distance(height_pos, center_pos) * dissipation_rate){
        outy[access_pos]=1;
     }else{
        outy[access_pos]=0;
     }*/
    outy[access_pos]=snoise3(storePos*instructions.turbulence) + instructions.density - distance(height_pos, center_pos) * instructions.dissipation_rate;

 }